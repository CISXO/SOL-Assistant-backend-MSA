name: Build and Deploy Insight Assistant Service

on:
  push:
    branches: [insight-assistant-main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # insight-assistant-service application.yml 복원
      - name: Restore insight-assistant-service application.yml
        working-directory: ./chart-similarity-service
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.INSIGHT_YML }}" > src/main/resources/application.yml

      # common-service application-common.yml 복원
      - name: Restore common-service application-common.yml
        working-directory: ./common-service
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.COMMON_YML }}" > src/main/resources/application-common.yml

      - name: Check insight service resources
        working-directory: ./chart-similarity-service
        run: ls -l src/main/resources/

      - name: Check common-service yml resources
        working-directory: ./common-service
        run: ls -l src/main/resources/

      # 3. Gradle 빌드
      - name: Build with Gradle
        working-directory: ./chart-similarity-service
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      # 4. Docker 설정
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # 5. Docker 이미지 빌드 (ARM64)
      - name: Build Docker image for ARM64
        working-directory: ./chart-similarity-service
        run: docker buildx build --platform linux/arm64 -t insight-assistant-service --load .

      # 6. Docker 이미지 tar로 저장
      - name: Save Docker image to tar
        working-directory: ./chart-similarity-service
        run: docker save insight-assistant-service > insight-assistant-service.tar

      # 7. AWS 인증 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 8. appspec.yml, deploy.sh, tar 파일을 zip으로 묶기
      - name: Create deployment zip
        working-directory: ./chart-similarity-service
        run: |
          zip -r insight-assistant-service-${{ github.sha }}.zip appspec.yml deploy/*.sh insight-assistant-service.tar

      # 9. S3에 업로드
      - name: Upload zip to S3
        working-directory: ./chart-similarity-service
        run: aws s3 cp insight-assistant-service-${{ github.sha }}.zip s3://sol-assistant-s3/insight-assistant-service/

      # 10. CodeDeploy 배포
      - name: Deploy with CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name sol-assistant-deploy \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --deployment-group-name backend-insight-zerotime-deploy \
            --s3-location bucket=sol-assistant-s3,bundleType=zip,key=insight-assistant-service/insight-assistant-service-${GITHUB_SHA}.zip
